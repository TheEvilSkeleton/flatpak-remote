# Based on https://raw.githubusercontent.com/gasinvein/proton-flatpak/7962b87cf0d079998ea861e1a358fa93d63af7e5/.github/workflows/flatpak.yml
name: Flatpak

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  APP_ID: # App ID (reverse-DNS)
  MANIFEST_PATH: # Path to manifest
  IMAGE_NAME: # Name of Docker image
  IMAGE_TAG: # Tag of image
  FLATPAK_BUNDLE: # Name of bundle (excl. .flatpak)
  FLATPAK_BRANCH: # Flatpak branch
  FLATPAK_BUILD_DIR: build-dir
  FLATPAK_BUILD_REPO: build-repo

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install flatpak-builder
      run: |
        set -e
        sudo add-apt-repository -y ppa:alexlarsson/flatpak
        sudo apt update -y
        sudo apt install -y flatpak-builder

    - name: Dump canonical manifest
      run: |
        set -e
        flatpak-builder --show-manifest ${MANIFEST_PATH} > canonical-manifest.json

    - name: Download flatpak SDK and sources
      run: |
        set -e
        flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        flatpak-builder --default-branch=${FLATPAK_BRANCH} --install-deps-from=flathub --install-deps-only --user /dev/null ${MANIFEST_PATH}
        flatpak-builder --default-branch=${FLATPAK_BRANCH} --download-only /dev/null ${MANIFEST_PATH}

    - name: Prime cache
      uses: actions/cache@v2
      with:
        path: |
          .flatpak-builder/ccache
        key: flatpak-builder-${{ hashFiles('canonical-manifest.json') }}
        restore-keys: |
          flatpak-builder-

    - name: Build flatpak
      run: |
        set -e
        flatpak-builder --default-branch=${FLATPAK_BRANCH} --disable-updates --disable-download --ccache --sandbox --repo=${FLATPAK_BUILD_REPO} ${FLATPAK_BUILD_DIR} ${MANIFEST_PATH}

    - name: Upload flatpak repo
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.FLATPAK_BUILD_REPO }}
        path: ${{ env.FLATPAK_BUILD_REPO }}

  publish-bundle:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Install flatpak
      run: |
        set -e
        sudo add-apt-repository -y ppa:alexlarsson/flatpak
        sudo apt update -y
        sudo apt install -y flatpak

    - name: Download flatpak repo
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.FLATPAK_BUILD_REPO }}

    - name: Create flatpak bundle
      run: |
        set -e
        mkdir -p ${FLATPAK_BUILD_REPO}/{extensions,refs/{mirrors,remotes},state,tmp/cache}
        flatpak build-bundle --runtime-repo=https://flathub.org/repo/flathub.flatpakrepo ${FLATPAK_BUILD_REPO} ${FLATPAK_BUNDLE}.flatpak ${APP_ID} ${FLATPAK_BRANCH}

    - name: Upload flatpak bundle
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.FLATPAK_BUNDLE }}
        path: ${{ env.FLATPAK_BUNDLE }}.flatpak

  publish-oci:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Install flatpak and libcontainers tools
      run: |
        set -e
        . /etc/os-release
        sudo sh -c "echo 'deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list"
        curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_${VERSION_ID}/Release.key | sudo apt-key add -
        sudo add-apt-repository -y ppa:alexlarsson/flatpak
        sudo apt update -y
        sudo apt install -y skopeo flatpak jq

    - name: Download flatpak repo
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.FLATPAK_BUILD_REPO }}

    - name: Create OCI bundle
      run: |
        set -e
        mkdir -p ${FLATPAK_BUILD_REPO}/{extensions,refs/{mirrors,remotes},state,tmp/cache}
        flatpak build-bundle \
          --oci \
          --runtime-repo=https://flathub.org/repo/flathub.flatpakrepo \
          ${FLATPAK_BUILD_REPO} ${FLATPAK_BUNDLE} ${APP_ID} ${FLATPAK_BRANCH}

    - name: Publish OCI image
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
        REGISTRY_AUTH_FILE: /tmp/auth.json
      run: |
        export IMAGE_REPOSITORY=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')
        set -e
        skopeo login --username "${{ github.actor }}" --password-stdin ghcr.io <<<$GITHUB_TOKEN
        skopeo copy \
          oci:${FLATPAK_BUNDLE} \
          docker://ghcr.io/${IMAGE_REPOSITORY}:$IMAGE_TAG

    - name: Update static index
      env:
        REGISTRY_AUTH_FILE: /tmp/auth.json
      run: |
        export IMAGE_REPOSITORY=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')
        set -e
        git clone -b gh-pages https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git gh-pages
        skopeo inspect docker://ghcr.io/${IMAGE_REPOSITORY}:$IMAGE_TAG | \
          jq '. as $img | { "Registry": "https://ghcr.io/", "Results": [ { "Name": "'${IMAGE_REPOSITORY}'", "Images": [$img] } ] }' \
          > gh-pages/index/static
        cd gh-pages
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"
        git add index/static
        git commit -m "Update index for ${GITHUB_SHA:0:7}"
        git push
